version: "3"
services:

# API

  nginx-api:
    container_name: nginx-api
    build: API-gateway/nginx
    ports:
      - 80:80
    depends_on:
      - flask-api
    networks:
      - default
      - api
      - reservation
      - user
      - restaurant
      
  flask-api:
    build: API-gateway
    env_file: 
      - variables.env
    ports:
      - "5000:5000"
    links:
      - postgres-api
    networks:
      - default
      - api
    command: python app.py
    depends_on:
      - postgres-api
      
  postgres-api:
    container_name: postgres-api
    hostname: postgres-api
    restart: always
    image: postgres:latest
    env_file: 
      - variables.env
    expose:
      - "5432"
    networks:
      - default
      - api
      
# RESERVATION    
      
  nginx-reservation:
    container_name: nginx-reservation
    build: reservation/nginx
    ports:
      - 8080:8080
    depends_on:
      - flask-reservation
    networks:
      - default
      - reservation
      - api
      - user
      - restaurant
      
  celery-reservation:
    build: reservation
    env_file: 
      - variables.env
    command: /bin/sh celery_start.sh
    user: root
    networks:
      - default
      - reservation
    links:
      - redis-reservation
    depends_on:
      - flask-reservation
      - redis-reservation
      - postgres-reservation
  
  redis-reservation:
    container_name: redis-reservation
    restart: always
    networks:
      - default
      - reservation
    image: redis:latest
    ports:
      - "6382:6382"
    links:
      - postgres-reservation
    depends_on:
      - postgres-reservation

  flask-reservation:
    build: reservation
    env_file: 
      - variables.env
    ports:
      - "5100:5100"
    links:
      - postgres-reservation
    networks:
      - default
      - reservation
    command: python app.py
    depends_on:
      - postgres-reservation

  

  postgres-reservation:
    container_name: postgres-reservation
    hostname: postgres-reservation
    restart: always
    image: postgres:latest
    env_file: 
      - variables.env
    expose:
      - "5432"
    networks:
      - default
      - reservation
      
# RESTAURANT

  nginx-restaurant:
    container_name: nginx-restaurant
    build: restaurant/nginx
    ports:
      - 8081:8081
    depends_on:
      - flask-restaurant
    networks:
      - default
      - restaurant
      - user
      - reservation
      - api
      
  celery-restaurant:
    build: restaurant
    env_file: 
      - variables.env
    command: /bin/sh celery_start.sh
    user: root
    networks:
      - default
      - restaurant
    links:
      - redis-restaurant
    depends_on:
      - flask-restaurant
      - redis-restaurant
      - postgres-restaurant
      
  flask-restaurant:
    build: restaurant
    env_file: 
      - variables.env
    ports:
      - "5070:5070"
    links:
      - postgres-restaurant
    networks:
      - default
      - restaurant
    command: python app.py
    depends_on:
      - postgres-restaurant

  postgres-restaurant:
    container_name: postgres-restaurant
    hostname: postgres-restaurant
    restart: always
    image: postgres:latest
    env_file: 
      - variables.env
    expose:
      - "5432"
    networks:
      - default
      - restaurant
      
  redis-restaurant:
    container_name: redis-restaurant
    restart: always
    networks:
      - default
      - restaurant
    image: redis:latest
    ports:
      - "6381:6381"
    links:
      - postgres-restaurant
    depends_on:
      - postgres-restaurant
      
# USER

  nginx-user:
    container_name: nginx-user
    build: user/nginx
    ports:
      - 8082:8082
    depends_on:
      - flask-user
    networks:
      - default
      - restaurant
      - user
      - reservation
      - api
      
  celery-user:
    build: user
    env_file: 
      - variables.env
    command: /bin/sh celery_start.sh
    user: root
    networks:
      - default
      - user
    links:
      - redis-user
    depends_on:
      - flask-user
      - redis-user
      - postgres-user
      
  flask-user:
    build: user
    env_file: 
      - variables.env
    ports:
      - "5060:5060"
    links:
      - postgres-user
    networks:
      - default
      - user
    command: python app.py
    depends_on:
      - postgres-user

  postgres-user:
    container_name: postgres-user
    hostname: postgres-user
    restart: always
    image: postgres:latest
    env_file: 
      - variables.env
    expose:
      - "5432"
    networks:
      - default
      - user
      
  redis-user:
    container_name: redis-user
    restart: always
    networks:
      - default
      - user
    image: redis:latest
    ports:
      - "6383:6383"
    links:
      - postgres-user
    depends_on:
      - postgres-user
  

networks:
  api:
  reservation:
  restaurant:
  user:
